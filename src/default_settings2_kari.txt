## Default settings for the simulation### Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12h#Scenario.endTime = 10000000#Scenario.endTime = 43200#●シュミレーション時間Scenario.endTime =3000## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second)# transmitRange : range of the interface (meters)# Define new applicationpingApplication.type = PingApplication#●パケット送信間隔（送信開始時間）pingApplication.interval = 40pingApplication.destinationRange = 0,40pingApplication.seed=8#●送信パケットサイズpingApplication.pingSize = 1000pingApp.pongSize = 5#pingApp.passive = false# Set Ping app for all nodesGroup.nrofApplications = 1Group.application1 = pingApplication# Add report for Ping app#Report.nrofReports = 2#Report.report2 = PingAppReporter# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBps#●通信速度btInterface.transmitSpeed = 250k#●通信距離btInterface.transmitRange = 15# High speed, long range, interface for group 4highspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 10MhighspeedInterface.transmitRange = 10# Define 6 different node groups#ノードグループの数Scenario.nrofHostGroups = 2## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all#          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement#●すべてのソードグループの共通設定Group.movementModel =RandomWalk#Group.GridLocation.rows = 10#Group.GridLocation.location = 10,10#Group.GridLocation.spacing = 10#●ルーティングプロトコル#Group.router=EpidemicRouter#Group.router =FirstContactRouter#Group.router =DirectDeliveryRouter#Group.router = MaxPropRouterGroup.router = WaveRouterGroup.immunityTime=400Group.custodyFraction=10#バッファサイズGroup.bufferSize = 1M#待ち時間Group.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1#インターフェースGroup.interface1 = btInterface#●移動速度Group.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)#メッセージの余命Group.msgTtl = 300#●ホストの数Group.nrofHosts = 40#●歩行者ホストの設定Group1.groupID=h#●被災地点ノード（固定）の設定Group2.groupID=d# group1 (pedestrians) specific settingsGroup1.groupID = p## Message creation parameters# How many event generatorsEvents.nrof = 0# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 0,0# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,125# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)●シュミレーション範囲MovementModel.worldSize = 400,400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 0# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = ContactTimesReportReport.report2 = ConnectivityONEReport## Default settings for some routers settings#ProphetRouter.secondsInTimeUnit = 30#SprayAndWaitRouter.nrofCopies = 6#SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$